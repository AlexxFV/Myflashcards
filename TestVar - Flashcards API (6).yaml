openapi: 3.0.3
info:
  title: TestVar - Flashcards API
  version: 1.0.0
  description: A revolutionary REST API for flashcards
paths:
  /api/collections/:
    get:
      operationId: collections_list
      description: API ViewSet to handle CRUD operations for collections.
      tags:
      - collections
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Collection'
          description: ''
    post:
      operationId: collections_create
      description: API ViewSet to handle CRUD operations for collections.
      tags:
      - collections
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Collection'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Collection'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Collection'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collection'
          description: ''
  /api/collections/{id}/:
    get:
      operationId: collections_retrieve
      description: API ViewSet to handle CRUD operations for collections.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this collection.
        required: true
      tags:
      - collections
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collection'
          description: ''
    put:
      operationId: collections_update
      description: API ViewSet to handle CRUD operations for collections.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this collection.
        required: true
      tags:
      - collections
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Collection'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Collection'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Collection'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collection'
          description: ''
    patch:
      operationId: collections_partial_update
      description: API ViewSet to handle CRUD operations for collections.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this collection.
        required: true
      tags:
      - collections
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCollection'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCollection'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCollection'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collection'
          description: ''
    delete:
      operationId: collections_destroy
      description: API ViewSet to handle CRUD operations for collections.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this collection.
        required: true
      tags:
      - collections
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/flashcards/:
    get:
      operationId: flashcards_list
      description: API ViewSet to handle CRUD operations for flashcards.
      tags:
      - flashcards
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FlashCard'
          description: ''
    post:
      operationId: flashcards_create
      description: API ViewSet to handle CRUD operations for flashcards.
      tags:
      - flashcards
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlashCard'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FlashCard'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FlashCard'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlashCard'
          description: ''
  /api/flashcards/{id}/:
    get:
      operationId: flashcards_retrieve
      description: API ViewSet to handle CRUD operations for flashcards.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this flash card.
        required: true
      tags:
      - flashcards
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlashCard'
          description: ''
    put:
      operationId: flashcards_update
      description: API ViewSet to handle CRUD operations for flashcards.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this flash card.
        required: true
      tags:
      - flashcards
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlashCard'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FlashCard'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FlashCard'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlashCard'
          description: ''
    patch:
      operationId: flashcards_partial_update
      description: API ViewSet to handle CRUD operations for flashcards.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this flash card.
        required: true
      tags:
      - flashcards
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFlashCard'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedFlashCard'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFlashCard'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlashCard'
          description: ''
    delete:
      operationId: flashcards_destroy
      description: API ViewSet to handle CRUD operations for flashcards.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this flash card.
        required: true
      tags:
      - flashcards
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/schema/:
    get:
      operationId: schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - ug
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - schema
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/users/:
    get:
      operationId: users_list
      description: API ViewSet for user management.
      tags:
      - users
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
    post:
      operationId: users_create
      description: API ViewSet for user management.
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/users/{id}/:
    get:
      operationId: users_retrieve
      description: API ViewSet for user management.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: users_update
      description: API ViewSet for user management.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: users_partial_update
      description: API ViewSet for user management.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: users_destroy
      description: API ViewSet for user management.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /flashcards/api/collections/:
    get:
      operationId: flashcards_api_collections_list
      description: API ViewSet to handle CRUD operations for collections.
      tags:
      - flashcards
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Collection'
          description: ''
    post:
      operationId: flashcards_api_collections_create
      description: API ViewSet to handle CRUD operations for collections.
      tags:
      - flashcards
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Collection'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Collection'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Collection'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collection'
          description: ''
  /flashcards/api/collections/{id}/:
    get:
      operationId: flashcards_api_collections_retrieve
      description: API ViewSet to handle CRUD operations for collections.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this collection.
        required: true
      tags:
      - flashcards
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collection'
          description: ''
    put:
      operationId: flashcards_api_collections_update
      description: API ViewSet to handle CRUD operations for collections.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this collection.
        required: true
      tags:
      - flashcards
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Collection'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Collection'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Collection'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collection'
          description: ''
    patch:
      operationId: flashcards_api_collections_partial_update
      description: API ViewSet to handle CRUD operations for collections.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this collection.
        required: true
      tags:
      - flashcards
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCollection'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCollection'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCollection'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collection'
          description: ''
    delete:
      operationId: flashcards_api_collections_destroy
      description: API ViewSet to handle CRUD operations for collections.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this collection.
        required: true
      tags:
      - flashcards
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /flashcards/api/flashcards/:
    get:
      operationId: flashcards_api_flashcards_list
      description: API ViewSet to handle CRUD operations for flashcards.
      tags:
      - flashcards
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FlashCard'
          description: ''
    post:
      operationId: flashcards_api_flashcards_create
      description: API ViewSet to handle CRUD operations for flashcards.
      tags:
      - flashcards
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlashCard'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FlashCard'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FlashCard'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlashCard'
          description: ''
  /flashcards/api/flashcards/{id}/:
    get:
      operationId: flashcards_api_flashcards_retrieve
      description: API ViewSet to handle CRUD operations for flashcards.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this flash card.
        required: true
      tags:
      - flashcards
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlashCard'
          description: ''
    put:
      operationId: flashcards_api_flashcards_update
      description: API ViewSet to handle CRUD operations for flashcards.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this flash card.
        required: true
      tags:
      - flashcards
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlashCard'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FlashCard'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FlashCard'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlashCard'
          description: ''
    patch:
      operationId: flashcards_api_flashcards_partial_update
      description: API ViewSet to handle CRUD operations for flashcards.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this flash card.
        required: true
      tags:
      - flashcards
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFlashCard'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedFlashCard'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFlashCard'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlashCard'
          description: ''
    delete:
      operationId: flashcards_api_flashcards_destroy
      description: API ViewSet to handle CRUD operations for flashcards.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this flash card.
        required: true
      tags:
      - flashcards
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /flashcards/api/users/:
    get:
      operationId: flashcards_api_users_list
      description: API ViewSet for user management.
      tags:
      - flashcards
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
    post:
      operationId: flashcards_api_users_create
      description: API ViewSet for user management.
      tags:
      - flashcards
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /flashcards/api/users/{id}/:
    get:
      operationId: flashcards_api_users_retrieve
      description: API ViewSet for user management.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - flashcards
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: flashcards_api_users_update
      description: API ViewSet for user management.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - flashcards
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: flashcards_api_users_partial_update
      description: API ViewSet for user management.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - flashcards
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: flashcards_api_users_destroy
      description: API ViewSet for user management.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - flashcards
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /schema/:
    get:
      operationId: schema_retrieve_2
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - ug
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - schema
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
components:
  schemas:
    Collection:
      type: object
      description: Serializer for collections.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        user:
          type: integer
        flashcards:
          type: array
          items:
            $ref: '#/components/schemas/FlashCard'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - flashcards
      - id
      - name
      - user
    DifficultyEnum:
      enum:
      - easy
      - medium
      - hard
      type: string
      description: |-
        * `easy` - Easy
        * `medium` - Medium
        * `hard` - Hard
    FlashCard:
      type: object
      description: Serializer for flashcard details.
      properties:
        id:
          type: integer
          readOnly: true
        question:
          type: string
          maxLength: 255
        answer:
          type: string
        difficulty:
          $ref: '#/components/schemas/DifficultyEnum'
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - answer
      - created_at
      - difficulty
      - id
      - question
    PatchedCollection:
      type: object
      description: Serializer for collections.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        user:
          type: integer
        flashcards:
          type: array
          items:
            $ref: '#/components/schemas/FlashCard'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
    PatchedFlashCard:
      type: object
      description: Serializer for flashcard details.
      properties:
        id:
          type: integer
          readOnly: true
        question:
          type: string
          maxLength: 255
        answer:
          type: string
        difficulty:
          $ref: '#/components/schemas/DifficultyEnum'
        created_at:
          type: string
          format: date-time
          readOnly: true
    PatchedUser:
      type: object
      description: Serializer for user details.
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        admin:
          type: boolean
    User:
      type: object
      description: Serializer for user details.
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        admin:
          type: boolean
      required:
      - id
      - username
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
servers:
- url: http://localhost:8000/api
  description: Development server
- url: http://testvar.difcsi.hu/api
  description: Reference server
